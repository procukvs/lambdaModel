  -- Boolean
let true x y = x;
let false x y = y;
let test l m n = l m n;
let iszero n = n (\x . false) true;
  -- Arithmetic
let succ n f x = f (n f x);
let plus m n f x = n f (m f x);
let mult m n f = m (n f);
let pred n f x = n (\g h . h (g f)) (\u . x) (\x.x);
  -- Fix point
let fix f = (\x.f(x x)) (\x.f(x x)); 
let fixM = (\f .(\x. f(\y. x x y)) (\x. f (\y . x x y)));
  -- Example
let sumR sum n = test (iszero n) 0 (plus n (sum (pred n)));
let factR fact n = test (iszero n) 1 (mult n (fact (pred n)));
let ackR ack x y =  test (iszero x) (succ y) 
                      (test (iszero y) (ack (pred x) 1) 
                	        (ack(pred x) (ack x (pred y))));		
let fibR fib n =  test (iszero n) 0 (test (iszero (pred n)) 1 
			      (plus (fib (pred n)) (fib (pred (pred n)))) );
					
fixM sumR 0
--fixM factR 5
--fixM fibR 8
--fix ackR 1 3

{-
fix sumR: 0->0(19) 2->3(106) 4->10(301) 5->15(454) 6->21(652) 7->28(901) 8->36(1207)
fixM sumR: 0->0(19) 2->3(108) 4->10(305) 5->15(459) 8->36(1215)
fix factR: 0->1(19) 2->2(184) 3->6(849) 4->24(4796) 5->120(32049)
fixM factR: 0->1(19) 2->2(188) 3->6(864) 4->24(4860) 5->120(32374)
fix fibR: 0->0(19) 2->1(140) 3->2(321) 4->3(737) 5->5(1569) 6->8(3257) 7->13(6562) 8->21(12960)
fixM fibR: 0->0(19) 2->1(142) 4->3(745) 5->5(1583) 8->21(13026)
fix ackR: 0+3->4(24) 0+6->7(24) 1+3->5(301) 1+6->8(675) 2+1->5(1128) 2+2->7(5824) 2+3->9(30926) 2+4->11(171804) 3+0->5(1456) 3+1->?(>200000)
-}					
{-					
  if (n == 0) 
  then 0
  else if (n==1) 
  then 1
  else ((fib (n-1)) + (fib (n-2)));
-}					   
 